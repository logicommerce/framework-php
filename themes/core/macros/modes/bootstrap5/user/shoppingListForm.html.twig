{% macro shoppingListForm(args) %}

    {%- set classWildcard = constant('FWK\\Core\\Form\\FormFactory::CLASS_WILDCARD') -%}
    {%- set attributeWildcard = constant('FWK\\Core\\Form\\FormFactory::ATTRIBUTE_WILDCARD') -%}
    {%- for name, element in args.form.outputElements([constant('FWK\\Enums\\RichFormItems::LC_DATA_VALIDATION')]) -%}
        {%- if name == constant('FWK\\Core\\Form\\Form::ELEMENT_FORM_START') -%}
            {{- element|replace({ (attributeWildcard): 'data-lc-form="shoppingListForm"' }) -}}
            <div class="form-message"></div>
            <div class="shoppingListFormFields">
        {%- elseif name == constant('FWK\\Core\\Form\\Form::ELEMENT_FORM_END') or name == constant('FWK\\Enums\\Parameters::TYPE') -%}
            {{- element -}}
        {%- elseif name == constant('FWK\\Core\\Form\\Form::SUBMIT') -%}
                <div class="moduleField moduleButton shoppingListRowModuleField shoppingListRowSubmitContainer">
                    {{ element|replace({ (classWildcard): '' }) }}
                </div>
            </div>{# End .shoppingListFormFields #}
        {%- else -%}
            {%- set hidden = args.form.definitionElements[name].type == constant('FWK\\Core\\Form\\Elements\\Inputs\\InputHidden::TYPE') -%}
            {%- set checkOrRadio = args.form.definitionElements[name].type in [
                constant('FWK\\Core\\Form\\Elements\\Inputs\\InputCheckbox::TYPE'), constant('FWK\\Core\\Form\\Elements\\Inputs\\InputRadio::TYPE')
            ] -%}
            {%- if not hidden -%}
                <div class="{{ checkOrRadio ? 'form-check' : 'form-group' }} moduleField shoppingListRowModuleField shoppingListRow{{- args.shoppingListRow.id -}}Container">
            {%- endif -%}
                    {{- element|replace({
                        (classWildcard): fillFnClass,
                        (attributeWildcard): fillFnAttr,
                    }) -}}
            {%- if not hidden -%}
                </div>
            {%- endif -%}
        {%- endif -%}
    {%- endfor -%}
    
{% endmacro %}
